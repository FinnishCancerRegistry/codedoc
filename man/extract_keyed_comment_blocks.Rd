% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collect_raw.R
\name{extract_keyed_comment_blocks}
\alias{extract_keyed_comment_blocks}
\alias{extract_keyed_comment_blocks_}
\title{Read codedoc-formatted Code Comments}
\usage{
extract_keyed_comment_blocks(
  text_file_paths,
  detect_comment_lines = function(x) grepl("^\\\\s*[#*]\\\\s*", x),
  clean_comment_lines = function(x) sub("^\\\\s*[#*]\\\\s*", "", x),
  readLines_arg_list = list()
)

extract_keyed_comment_blocks_(
  text_file_paths,
  detect_comment_lines = function(x) grepl("^\\\\s*[#*]\\\\s*", x),
  clean_comment_lines = function(x) sub("^\\\\s*[#*]\\\\s*", "", x),
  readLines_arg_list = list()
)
}
\arguments{
\item{text_file_paths}{\verb{[character]} (mandatory, no default)

path to a text file; the file is not inspected in any way to be a text file
based on file extension or any other characteristics, it is merely assumed
to be one}

\item{detect_comment_lines}{\verb{[function]}
(optional, default \code{function(x) grepl("^\\\\s*[#*]", x)})

a function which takes lines of text as input and outputs a logical vector
of the same length as input which is \code{TRUE} when the line is a comment line;
the default detects lines that start with the regex \code{"^\\\\s*[#*]\\\\s*"}}

\item{clean_comment_lines}{\verb{[function]}
(optional, default \code{function(x) sub("^\\\\s*[#*]\\\\s*", "", x)})

a function which takes lines of text as input and outputs a character vector
of the same length as input; this function takes comment lines and should
strip any comment characters preceding the text itself;
the default removes any substrings matching regex \code{"^\\\\s*[#*]\\\\s*"}}

\item{readLines_arg_list}{\verb{[list]} (mandatory, default \code{list()})

list of arguments passed to \link{readLines}; \code{con} is always set to
an element of \code{text_file_paths}}
}
\description{
Extracts blocks of specifically formatted comments from text file.
}
\details{
\code{extract_keyed_comment_blocks} is intended to be used by the user and not
in other functions but is otherwise identical to
\code{extract_keyed_comment_blocks_}. \code{extract_keyed_comment_blocks_} is intended
to be used within other functions.
See \code{help(topic = "dbc", package = "dbc")} for discussion on this
distinction.
}
\examples{

key_df <- codedoc::extract_keyed_comment_blocks_(
  text_file_paths = codedoc::example_text_file_path("r_script.R")
)
print(key_df)

}
